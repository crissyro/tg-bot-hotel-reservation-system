version: "3.9"

services:
  bot:
    build:
      context: .
      dockerfile: Dockerfile.bot
    env_file:
      - .env
    depends_on:
      - postgres
      - redis
      - mongo

  postgres:
    container_name: postgres_container
    image: postgres:14.8-alpine3.18
    environment:
      POSTGRES_DB: "hotel_db"
      POSTGRES_USER: "hotel_user"
      POSTGRES_PASSWORD: "POSTGRES_PASSWORD"
      PGDATA: "/var/lib/postgresql/data/pgdata"
    volumes:
      - ../2. Init Database:/docker-entrypoint-initdb.d
      - habrdb-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d shop"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 4G
    networks:
      - postgres

  pgadmin:
    container_name: pgadmin_container
    image: dpage/pgadmin4:7.2
    environment:
      PGADMIN_DEFAULT_EMAIL: "admin@admin.com"
      PGADMIN_DEFAULT_PASSWORD: "admin"
      PGADMIN_CONFIG_SERVER_MODE: "False"
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    ports:
      - "5050:80"
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 1G
    networks:
      - postgres

  redis:
    image: redis:7
    ports:
      - "6379:6379"

  mongo:
    image: mongo:6
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db

  compass:
    image: mongo-express
    environment:
      ME_CONFIG_MONGODB_URL: mongodb://mongo:27017/
    ports:
      - "8081:8081"

volumes:
  postgres_data:
  mongo_data:
