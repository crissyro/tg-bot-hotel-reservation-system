import logging
from aiogram import types
from aiogram.utils.keyboard import InlineKeyboardBuilder
from config.config import config

async def show_admin_panel(message: types.Message):
    try:
        if message.from_user.id not in config.ADMINS:
            await message.answer("‚õî –î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω!")
            return

        builder = InlineKeyboardBuilder()
        builder.button(text="üè† –ù–æ–º–µ—Ä–∞", callback_data="admin_rooms")
        builder.button(text="üçΩ –ú–µ–Ω—é", callback_data="admin_menu")
        builder.button(text="üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞", callback_data="admin_stats")
        builder.button(text="üì® –†–∞—Å—Å—ã–ª–∫–∞", callback_data="admin_broadcast")
        builder.button(text="üìù –û—Ç–∑—ã–≤—ã", callback_data="admin_reviews")
        builder.adjust(2, 2, 1)

        if message.text == "–ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å":
            await message.edit_text(
                "‚öôÔ∏è –ü–∞–Ω–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞:",
                reply_markup=builder.as_markup()
            )
        else:
            await message.answer(
                "‚öôÔ∏è –ü–∞–Ω–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞:",
                reply_markup=builder.as_markup()
            )

    except Exception as e:
        logging.error(f"–û—à–∏–±–∫–∞ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏: {str(e)}")
        await message.answer("‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø–∞–Ω–µ–ª–∏")