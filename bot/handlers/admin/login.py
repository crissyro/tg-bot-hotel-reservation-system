from aiogram import Router
from aiogram.types import Message
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import State, StatesGroup
from aiogram.filters import Command
from config import config

router = Router()


class AdminLogin(StatesGroup):
    waiting_for_password = State()


@router.message(Command("admin_input"))
async def ask_admin_password(message: Message, state: FSMContext):
    await state.set_state(AdminLogin.waiting_for_password)
    await message.answer("üîê –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞:")


@router.message(AdminLogin.waiting_for_password)
async def process_admin_password(message: Message, state: FSMContext):
    if message.text == config.admin_password:
        await message.answer("‚úÖ –ü–∞—Ä–æ–ª—å –≤–µ—Ä–Ω—ã–π! –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –º–µ–Ω—é –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.")
        # —Ç—É—Ç –º–æ–∂–Ω–æ –ø–æ–∫–∞–∑–∞—Ç—å –∏–Ω–ª–∞–π–Ω-–∫–Ω–æ–ø–∫–∏ –∏–ª–∏ –º–µ–Ω—é
        await state.clear()
    else:
        await message.answer("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –ø–∞—Ä–æ–ª—å. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑ –∏–ª–∏ –≤–≤–µ–¥–∏—Ç–µ /start.")
        await state.clear()
