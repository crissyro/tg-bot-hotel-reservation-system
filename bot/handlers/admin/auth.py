from aiogram import Router, types, F
from aiogram.filters import Command
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import StatesGroup, State

from config.config import config
from keyboards.admin import admin_panel_keyboard

router = Router()

class AdminAuth(StatesGroup):
    waiting_password = State()

@router.message(Command("admin_input"))
async def admin_login(message: types.Message, state: FSMContext):
    if message.from_user.id not in config.admins:
        await message.answer("‚õî –î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω!")
        return
        
    await message.answer(
        "üîê <b>–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω–∞—è –ø–∞–Ω–µ–ª—å</b>\n"
        "–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å –¥–ª—è –¥–æ—Å—Ç—É–ø–∞:",
        parse_mode="HTML"
    )
    await state.set_state(AdminAuth.waiting_password)

async def show_admin_panel(message: types.Message):
    await message.answer(
        "‚öôÔ∏è <b>–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω–∞—è –ø–∞–Ω–µ–ª—å</b>\n"
        "–í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∑–¥–µ–ª –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è:",
        reply_markup=admin_panel_keyboard(),
        parse_mode="HTML"
    )
    
    await message.answer(
        "‚å®Ô∏è –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –Ω–∞ –∞–¥–º–∏–Ω-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—É...",
        reply_markup=types.ReplyKeyboardRemove()
    )

@router.message(AdminAuth.waiting_password, F.text)
async def admin_password_check(message: types.Message, state: FSMContext):
    if message.text == config.admin_password:
        await message.answer("‚úÖ –£—Å–ø–µ—à–Ω–∞—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è!")
        await show_admin_panel(message)
        await state.clear()
    else:
        await message.answer("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –ø–∞—Ä–æ–ª—å! –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑:")